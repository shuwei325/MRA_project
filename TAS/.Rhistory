colnames(latlondata) <- c('xc','yc','lat','lon')
colnames(varreg_pre) <- c('xc','yc','Time',c1) ##Se ponen Nombres a las columnas
varreg_pre <- varreg_pre %>% mutate(Time=ymd_hms(as.character(Time))) %>%
mutate(Year = year(Time),Month=month(Time)) %>%
group_by(Year,Month,xc,yc) %>% summarise(m=mean(eval(as.name(c1)))) %>% ungroup()  ##Convierte la variable time en tres variables que indican el a√±o y mes y saca la media de las observaciones para ese mes.
varreg_pre <- varreg_pre %>% left_join(latlondata,by = c('xc', 'yc')) %>%
select(-xc,-yc) ##Une al cuadro las variables espaciales
varreg_pre <- varreg_pre %>% mutate(ID = rep(i, dim(varreg_pre)[1]))
varreg <- bind_rows(varreg,varreg_pre) ##Uno los datos del archivo con los que fueron trabajados anteriormente en el ciclo.
}
595700/16100
37/12
140*115
table(varreg$Year)
table(varreg_pre$Year)
names(varreg_pre$Year)
load(file ="tas.Rdata")
140*115
#140*115=16100 locations
6182400/16100
384/12
str(tas.data)
table(tas.data$ID)
setwd("D:/UCR/CIMPA/codes/TAS descriptive")
load(file ="tas.Rdata")
table(tas.data$lat)
summary(tas.data$lat)
summary(tas.data$longitude)
summary(tas.data$lon)
str(tas.data)
library(tidyverse)
View(tas.data)
tas.data$lat[147]
tas.data$lat[146]
tas.data$lat[147]
tas.data$lat[148]
tas.data$lat[147]
View(tas.data)
tas.data$lon[79]
prueba <- tas.data %>% filter(lat==30.14539,lon==218.8127)
prueba
prueba <- tas.data %>% filter(lat==tas.data$lat[147],lon==218.8127)
prueba <- tas.data %>% filter(lat==tas.data$lat[147],lon==tas.data$lon[79])
prueba <- tas.data %>% filter(lat==30.14539)
str(tas.data)
prueba <- tas.data %>% filter(Year=1968)
prueba <- tas.data %>% filter(Year==1968)
prueba <- tas.data %>% filter(lat<=21)
12*31
4608/372
table(tas.data$lat)
lat.table<-table(tas.data$lat)
768/12
table(tas.data$lat,tas.data$lon)
hist(tas.data$lat)
hist(tas.data$lat)
tabla1 <- tas.data %>% filter(lat>=29|lat<=30)
tabla1 <- tas.data %>% filter(lat>=29 & lat<=30)
table(tabla1$lat)
768/12
table(tabla1$lon)
384/12
tabla1 <- tas.data %>% filter(lat>=29 & lat<=30 & lon>=240 & lon <=241)
table(tabla1$lat)
table(tabla1$lon)
tabla1 <- tas.data %>% filter(lat>=29.97 & lat<=30 & lon>=240 & lon <=240.05)
table(tabla1$lat)
table(tabla1$lon)
tabla1 <- tas.data %>% filter(lat>=29 & lat<=30 & lon>=240 & lon <=241)
table(tabla1$lat)
table(tabla1$lon)
tabla1 <- tas.data %>% filter(lat>=29.97 & lat<=30 & lon>=240 & lon <=241)
table(tabla1$lat)
table(tabla1$lon)
tabla1 <- tas.data %>% filter(lat>=29 & lat<=30 & lon>=260 & lon <=261)
table(tabla1$lat)
table(tabla1$lon)
tabla1 <- tas.data %>% filter(lat>=29.97 & lat<=30 & lon>=240 & lon <=241)
table(tabla1$lat)
table(tabla1$lon)
table(tabla2$lat)
table(tabla2$lon)
tabla2 <- tas.data %>% filter(lat>=29 & lat<=30 & lon>=260 & lon <=261)
table(tabla2$lat)
table(tabla2$lon)
tabla2 <- tas.data %>% filter(lat>=29 & lat<=30 & lon>=260.7 & lon <=261)
table(tabla2$lat)
table(tabla2$lon)
tabla2 <- tas.data %>% filter(lat>=29.87 & lat<=30 & lon>=260.7 & lon <=261)
table(tabla2$lat)
table(tabla2$lon)
tabla3 <- tas.data %>% filter(lat>=29.87 & lat<=30 & lon>=300 & lon <=301)
table(tabla3$lat)
table(tabla3$lon)
tabla3 <- tas.data %>% filter(lat>=29.87 & lat<=30)
table(tabla3$lat)
table(tabla3$lon)
tabla3 <- tas.data %>% filter(lat>=29.87 & lat<=30 & lon>=293)
table(tabla3$lat)
table(tabla3$lon)
tabla1 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=240 & lon <=241)
table(tabla1$lat)
table(tabla1$lon)
tabla1 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=240.9 & lon <=241)
table(tabla1$lat)
table(tabla1$lon)
tabla2 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=260.7 & lon <=261)
table(tabla2$lat)
tabla2 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=260 & lon <=261)
table(tabla2$lat)
table(tabla2$lon)
tabla2 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=260.6 & lon <=261)
table(tabla2$lat)
table(tabla2$lon)
tabla2 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=260.65 & lon <=261)
table(tabla2$lat)
table(tabla2$lon)
tabla3 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=293)
table(tabla2$lat)
table(tabla2$lon)
tabla1 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=240.9 & lon <=241)
table(tabla1$lat)
tabla1 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=240 & lon <=241)
table(tabla1$lat)
table(tabla1$lon)
tabla1 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=240.7 & lon <=241)
table(tabla1$lat)
table(tabla1$lon)
tabla2 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=260.65 & lon <=261)
table(tabla1$lat)
tabla3 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=293)
tabla2 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=260.65 & lon <=261)
table(tabla2$lat)
table(tabla2$lon)
tabla3 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=293)
table(tabla3$lat)
table(tabla3$lon)
tabla3 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=300 & lon <=301)
table(tabla3$lat)
table(tabla3$lon)
tabla3 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=300.8 & lon <=301)
table(tabla3$lat)
table(tabla3$lon)
y1 <- tas.data %>% filter(lat>=29.97 & lat<=30 & lon>=240 & lon <=241)
y2 <- tas.data %>% filter(lat>=29.87 & lat<=30 & lon>=260.7 & lon <=261)
y3 <- tas.data %>% filter(lat>=29.87 & lat<=30 & lon>=293)
y4 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=240.9 & lon <=241)
y5 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=260.65 & lon <=261)
y6 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=293)
y7 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=240.7 & lon <=241)
y8 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=260.65 & lon <=261)
y9 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=300.8 & lon <=301)
dim(y1)
dim(y2)
dim(y3)
dim(y4)
dim(y5)
dim(y6)
dim(y7)
dim(y8)
table(y6$lon)
y6 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=293 & lon <=293.2)
dim(y6)
?left_join
full_join(y1,y2, by=c("Year","Month"))
left_join(y1,y2, by=c("Year","Month"))
datos<-left_join(y1,y2, by=c("Year","Month"))
dim(datos)
(y1==y2)
(y1==y2)[,1:2]
colSums((y1==y2)[,1:2])
colSums((y1==y3)[,1:2])
colSums((y1==y2)[,1:2])
colSums((y1==y3)[,1:2])
colSums((y1==y4)[,1:2])
colSums((y1==y5)[,1:2])
colSums((y1==y6)[,1:2])
colSums((y1==y7)[,1:2])
colSums((y1==y8)[,1:2])
colSums((y1==y9)[,1:2])
full_join(y1,y2,y3,y4,y5,y6,y7,y8,y9, by=c("Year","Month"))
paste0("y",i)
i<-1
paste0("y",i)
get(paste0("y",i))
i<-2
datos<-NULL
datos<-left_join(y1,get(paste0("y",i)), by=c("Year","Month"))
datos <- data.frame(y1,y2$tas,y3$tas,y4$tas,y5$tas,y6$tas,y7$tas,y8$tas,y9$tas)
datos <- data.frame(y1$tas,y2$tas,y3$tas,y4$tas,y5$tas,y6$tas,y7$tas,y8$tas,y9$tas)
library(tidyverse)
library(fracdiff)
library(ggplot2)
library(forecast)
library(fpp2)
library(ggfortify)
load(file ="tas.Rdata")
y1 <- tas.data %>% filter(lat>=29.97 & lat<=30 & lon>=240 & lon <=241)
y2 <- tas.data %>% filter(lat>=29.87 & lat<=30 & lon>=260.7 & lon <=261)
y3 <- tas.data %>% filter(lat>=29.87 & lat<=30 & lon>=293)
y4 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=240.9 & lon <=241)
y5 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=260.65 & lon <=261)
y6 <- tas.data %>% filter(lat>=40 & lat<=41 & lon>=293 & lon <=293.2)
y7 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=240.7 & lon <=241)
y8 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=260.65 & lon <=261)
y9 <- tas.data %>% filter(lat>=50 & lat<=51 & lon>=300.8 & lon <=301)
datos <- data.frame(y1$tas,y2$tas,y3$tas,y4$tas,y5$tas,y6$tas,y7$tas,y8$tas,y9$tas)
knitr::opts_chunk$set(echo = TRUE,fig.width=6, fig.height=6)
datos <- data.frame(y1,y2$tas,y3$tas,y4$tas,y5$tas,y6$tas,y7$tas,y8$tas,y9$tas)
names(datos)
datos <- data.frame(y1[,1:3],y2$tas,y3$tas,y4$tas,y5$tas,y6$tas,y7$tas,y8$tas,y9$tas)
colnames(datos)
colnames(datos)[3:11]<-c("y1","y2","y3","y4","y5","y6","y7","y8","y9")
names(datos)
?ts
datos.ts<-ts(datos,start=c(1968,1))
datos.ts
tail(datos.ts)
table(tas.data$Year)
autoplot(y_datos.ts)
autoplot(datos.ts)
datos.ts<-ts(datos[,-c(1,2)],start=c(1968,1))
autoplot(datos.ts)
autoplot(datos.ts, facets = TRUE)
cor(datos.ts)
ggcorrplot(datos.ts)
library(ggplot2)
ggcorrplot(datos.ts)
library(ggcorrplot)
install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(datos.ts)
ggcorrplot(datos.ts)
ggcorrplot(datos.ts)
cor(datos.ts)
ggcorrplot(datos.ts)
corr<-cor(datos.ts)
(corr<-cor(datos.ts))
ggcorrplot(datos.ts)
ggcorrplot(corr)
corrplot(corr, type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
library(corrplot)
library(RColorBrewer)
install.packages("corrplot")
library(corrplot)
library(RColorBrewer)
corrplot(corr, type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
rquery.cormat(datos.ts)
y1<-datos.ts[,"y1"]
y1<-datos.ts[,"y1"]
y2<-datos.ts[,"y2"]
y3<-datos.ts[,"y3"]
y4<-datos.ts[,"y4"]
y5<-datos.ts[,"y5"]
y6<-datos.ts[,"y6"]
y7<-datos.ts[,"y7"]
y8<-datos.ts[,"y8"]
y9<-datos.ts[,"y9"]
gglagplot(y1)
y1
datos.ts
datos.ts<-ts(datos[,-c(1,2)],start=c(1968,1),frequency = 12)
autoplot(datos.ts)
autoplot(datos.ts, facets = TRUE)
(corr<-cor(datos.ts))
#ggcorrplot(corr)
corrplot(corr, type="upper", order="hclust",
col=brewer.pal(n=8, name="RdYlBu"))
y1<-datos.ts[,"y1"]
y2<-datos.ts[,"y2"]
y3<-datos.ts[,"y3"]
y4<-datos.ts[,"y4"]
y5<-datos.ts[,"y5"]
y6<-datos.ts[,"y6"]
y7<-datos.ts[,"y7"]
y8<-datos.ts[,"y8"]
y9<-datos.ts[,"y9"]
gglagplot(y1)
gglagplot(y1)
gglagplot(y1)
gglagplot(y2)
gglagplot(y3)
gglagplot(y4)
gglagplot(y5)
gglagplot(y6)
gglagplot(y7)
gglagplot(y8)
gglagplot(y9)
ggAcf(y1,lag.max=100,ci=0.95)
ggAcf(y1,lag.max=100,ci=0.95)
ggAcf(y2,lag.max=100,ci=0.95)
ggAcf(y3,lag.max=100,ci=0.95)
ggAcf(y4,lag.max=100,ci=0.95)
ggAcf(y5,lag.max=100,ci=0.95)
ggAcf(y6,lag.max=100,ci=0.95)
ggAcf(y7,lag.max=100,ci=0.95)
ggAcf(y8,lag.max=100,ci=0.95)
ggAcf(y9,lag.max=100,ci=0.95)
autoplot(y1)
ggAcf(y1,lag.max=100,ci=0.95)
ggPacf(y1,lag.max=100,ci=0.95)
ggseasonplot(y1, year.labels=FALSE, continuous=TRUE)
ggseasonplot(y1, year.labels=FALSE, continuous=TRUE, polar = TRUE)
ggsubseriesplot(y1)
mod<-auto.arima(y1)
mod
ggtsdiag(mod)
raw.spec <- spec.pgram(y1, taper = 0)
raw.spec <- spec.pgram(y1, taper = 1)
raw.spec <- spec.pgram(y1, taper = 0.5)
spec.df <- data.frame(freq = raw.spec$freq, spec = raw.spec$spec)
# Create a vector of periods to label on the graph, units are in years
yrs.period <- rev(c(1/6, 1/5, 1/4, 1/3, 0.5, 1, 3, 5, 10, 100))
yrs.labels <- rev(c("1/6", "1/5", "1/4", "1/3", "1/2", "1", "3", "5", "10",
"100"))
yrs.freqs <- 1/yrs.period * 1/12  #Convert annual period to annual freq, and then to monthly freq
spec.df$period <- 1/spec.df$freq
ggplot(data = subset(spec.df)) + geom_line(aes(x = freq, y = spec)) + scale_x_continuous("Period (years)",
breaks = yrs.freqs, labels = yrs.labels) + scale_y_continuous()
plot(raw.spec, log = "no")
raw.spec <- spec.pgram(y1, taper = 0)
plot(raw.spec)
plot(raw.spec, log = "no")
spec.df <- data.frame(freq = raw.spec$freq, spec = raw.spec$spec)
# Create a vector of periods to label on the graph, units are in years
yrs.period <- rev(c(1/6, 1/5, 1/4, 1/3, 0.5, 1, 3, 5, 10, 100))
yrs.labels <- rev(c("1/6", "1/5", "1/4", "1/3", "1/2", "1", "3", "5", "10",
"100"))
yrs.freqs <- 1/yrs.period * 1/12  #Convert annual period to annual freq, and then to monthly freq
spec.df$period <- 1/spec.df$freq
ggplot(data = subset(spec.df)) + geom_line(aes(x = freq, y = spec)) + scale_x_continuous("Period (years)",
breaks = yrs.freqs, labels = yrs.labels) + scale_y_continuous()
library(dplR)
install.packages("dplR")
library(dplR)
?morlet
datos$Year
wave.out <- morlet(y1 = y1, x1 = datos$Year, p2 = 8, dj = 0.1, siglvl = 0.95)
# p2=6 <=> estimate out to 2^8 = 256 months dj <=> controls the frequency
# resolution hack the period estimate to be in years, not months
wave.out$period <- wave.out$period/12
levs <- quantile(wave.out$Power, c(0, 0.25, 0.5, 0.75, 0.95, 1))
wavelet.plot(wave.out, wavelet.levels = levs, crn.ylim = c(22.5, 30))
datos$Year
wave.out$period
names(wave.out)
wave.out$period
length(y1)
384/2
2^5
2^8
wave.out <- morlet(y1 = y1, x1 = datos$Year)
wave.out$period
wave.out$period/12
# p2=6 <=> estimate out to 2^8 = 256 months dj <=> controls the frequency
# resolution hack the period estimate to be in years, not months
wave.out$period <- wave.out$period/12
levs <- quantile(wave.out$Power, c(0, 0.25, 0.5, 0.75, 0.95, 1))
wavelet.plot(wave.out, wavelet.levels = levs, crn.ylim = c(22.5, 30))
library(wavethresh)
install.packages("wavethresh")
library(wavethresh)
y1wd <- wd(y1, filter.number = 1, family = "DaubExPhase")
my.data <- data.frame(y1 = y1)
my.data
my.data$y1
my.w <- analyze.wavelet(my.data, "y1",
loess.span = 0,
dt = 1, dj = 1/250,
lowerPeriod = 16,
upperPeriod = 128,
make.pval = TRUE, n.sim = 10)
install.packages("WaveletComp")
library(WaveletComp)
my.w <- analyze.wavelet(my.data, "y1",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 16,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
wt.image(my.w, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
library(astsa)
install.packages("astsa")
libarry(astsa)
library(astsa)
ts.plot(datos.ts, col=1:2)
ts.plot(datos.ts)
names(datos.ts)
datos.ts
ts.plot(datos.ts, col=1:9)
spec = mvspec(datos.ts, spans=c(3,3), taper=.1)
spec$fxx        # look a spectral matrix estimates
spec$bandwidth  # bandwidth with time unit = year
1/0.1142
frequency(datos.ts)
spec$bandwidth/frequency(datos.ts)
1/spec$bandwidth/frequency(datos.ts)
1/(spec$bandwidth/frequency(datos.ts) )
plot(spec, plot.type="coherency")
plot(spec, plot.type="coherency")
spec = mvspec(datos.ts, spans=c(3,3), taper=.1)
spec = mvspec(datos.ts, spans=c(3,3), taper=.1)
raw.spec <- spec.pgram(y1, taper = 0)
plot(raw.spec)   #log scale
plot(raw.spec, log = "no")
ts.plot(datos.ts, col=1:9)
spec = mvspec(datos.ts, spans=c(3,3), taper=.1)
dog$fxx        # look a spectral matrix estimates
spec$fxx        # look a spectral matrix estimates
spec$bandwidth  # bandwidth with time unit = year
1/spec$bandwidth
mvspec(soi, spans=c(7,7), taper=.5)$details[1:45,]
my.data <- data.frame(y1 = y1)
my.w <- analyze.wavelet(my.data, "y1",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 16,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
wt.image(my.w, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
wt.image(my.w, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
my.data <- data.frame(y1 = y2)
my.w <- analyze.wavelet(my.data, "y1",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 16,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
my.w <- analyze.wavelet(my.data, "y1",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 16,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
wt.image(my.w, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
wt.image(my.w, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
my.w <- analyze.wavelet(my.data, "y1",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 1,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
my.w <- analyze.wavelet(my.data, "y1",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 1,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
wt.image(my.w, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
my.data <- data.frame(datos.ts)
my.w <- analyze.wavelet(my.data, "y1",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 1,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
wt.image(my.w, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
paste0("y",i)
i<-1
paste0("y",i)
mod<-auto.arima(get(paste0("y",i)))
print(mod)
par(mfrow=c(3,3))
ggAcf(y1,lag.max=100,ci=0.95)
ggAcf(y2,lag.max=100,ci=0.95)
acf(y1)
acf(y2)
acf(y1,lag.max=100,ci=0.95)
acf(y2,lag.max=100,ci=0.95)
knitr::opts_chunk$set(echo = TRUE,fig.width=3, fig.height=3)
autoplot(y1)
ggAcf(y1,lag.max=100,ci=0.95)
ggPacf(y1,lag.max=100,ci=0.95)
ggseasonplot(y1, year.labels=FALSE, continuous=TRUE)
raw.spec <- spec.pgram(y1, taper = 0)
plot(raw.spec)   #log scale
plot(raw.spec, log = "no")
par(mfrow=c(1,2))
plot(raw.spec)   #log scale
plot(raw.spec, log = "no")
par(mfrow=c(1,2))
plot(raw.spec)   #log scale
plot(raw.spec, log = "no")
par(mfrow=c(3,3))
my.w1 <- analyze.wavelet(my.data, "y1",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 1,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
my.w1 <- analyze.wavelet(my.data, "y1",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 1,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
my.w2 <- analyze.wavelet(my.data, "y2",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 1,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
my.w2 <- analyze.wavelet(my.data, "y2",loess.span = 0,
dt = 1, dj = 1/250,lowerPeriod = 1,
upperPeriod = 128,make.pval = TRUE, n.sim = 10)
wt.image(my.w1, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
wt.image(my.w1, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
wt.image(my.w, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
wt.image(my.w1, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
wt.image(my.w2, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
par(mfrow=c(3,3))
wt.image(my.w1, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
wt.image(my.w2, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
show(paste0('Y',i))
reconstruct(my.w1, plot.waves = FALSE, lwd = c(1,2),
legend.coords = "bottomleft", ylim = c(-1.8, 1.8))
reconstruct(my.w1, plot.waves = FALSE, lwd = c(1,2),
legend.coords = "bottomleft", ylim = c(-1.8, 1.8))
reconstruct(my.w1, plot.waves = FALSE, lwd = c(1,2),
legend.coords = "bottomleft")
par(mfrow=c(1,2))
par(mfrow=c(1,2))
wt.image(my.w1, color.key = "quantile", n.levels = 250,
legend.params = list(lab = "wavelet power levels", mar = 4.7))
reconstruct(my.w1, plot.waves = FALSE, lwd = c(1,2),
legend.coords = "bottomleft")
